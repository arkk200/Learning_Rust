use std::mem::size_of;

fn main() {
    // C언어 같은 경우 문자열은 문자가 여러개 모여 문자열이 된다.
    // 그러나 Rust에서 문자열은 문자가 여러개 모여 생겨난 것과는 다르다.
    // Rust char는 4바이트 이지만 문자열에서 하나의 문자는 1바이트가 될 수 도 있다.
    // std::mem::size_of 를 이용해서 타입의 크기를 볼 수 있다.
    println!("Size of a char: {}", std::mem::size_of::<char>());    
    println!("Size of a char: {}", size_of::<char>()); // use를 써서 예쁘게 만들 수 있다.

    // .len()은 스트링의 크기를 바이트로 반환해준다.
    println!("Size of string containing 'a': {}", "a".len()); // 1
    println!("Size of string containing '1234567': {}", "1234567".len()); // 7
    // 한국어는 아스키코드에 포함되어 있지 않기에 3바이트로 나온다.
    println!("Size of string containing '뷁': {}", "뷁".len()); // 3
    println!("Size of string containing '𓃒𓀀𓅯𓆞𓃯': {}", "𓃒𓀀𓅯𓆞𓃯".len()); // 20
    println!("Size of string containing '░': {}", "░".len()); // 3
    println!("Size of string containing '
    ░░░░░▄▄▀▀▀▀▀▀▀▀▀▄▄░░░░░
    ░░░░█░░░░░░░░░░░░░█░░░░
    ░░░█░░▄▄▄░░░░░▄▄▄░░█░░░
    ░░░█░░███░░▄░░███░░█░░░
    ░░░▄█░▄░░░▀▀▀░░░▄░█▄░░░
    ░░░█░░▀█▀█▀█▀█▀█▀░░█░░░
    ░░░▄██▄▄▀▀▀▀▀▀▀▄▄██▄░░░
    ░▄█░█▀▀█▀▀▀█▀▀▀█▀▀█░█▄░
    ▄▀░▄▄▀▄▄▀▀▀▄▀▀▀▄▄▀▄▄░▀▄
    █░░░░▀▄░█▄░░░▄█░▄▀░░░░█
    ░▀▄▄░█░░█▄▄▄▄▄█░░█░▄▄▀░
    ░░░▀██▄▄███████▄▄██▀░░░
    ░░░████████▀████████░░░
    ░░▄▄█▀▀▀▀█░░░█▀▀▀▀█▄▄░░
    ░░▀▄▄▄▄▄▀▀░░░▀▀▄▄▄▄▄▀░░': {}", "
    ░░░░░▄▄▀▀▀▀▀▀▀▀▀▄▄░░░░░
    ░░░░█░░░░░░░░░░░░░█░░░░
    ░░░█░░▄▄▄░░░░░▄▄▄░░█░░░
    ░░░█░░███░░▄░░███░░█░░░
    ░░░▄█░▄░░░▀▀▀░░░▄░█▄░░░
    ░░░█░░▀█▀█▀█▀█▀█▀░░█░░░
    ░░░▄██▄▄▀▀▀▀▀▀▀▄▄██▄░░░
    ░▄█░█▀▀█▀▀▀█▀▀▀█▀▀█░█▄░
    ▄▀░▄▄▀▄▄▀▀▀▄▀▀▀▄▄▀▄▄░▀▄
    █░░░░▀▄░█▄░░░▄█░▄▀░░░░█
    ░▀▄▄░█░░█▄▄▄▄▄█░░█░▄▄▀░
    ░░░▀██▄▄███████▄▄██▀░░░
    ░░░████████▀████████░░░
    ░░▄▄█▀▀▀▀█░░░█▀▀▀▀█▄▄░░
    ░░▀▄▄▄▄▄▀▀░░░▀▀▄▄▄▄▄▀░░".len()); // 1110
    // 복잡해질수록 바이트 수는 늘어난다.

    // chars() 는 "문자열" 을 ('문', '자', '열') 식으로 나눠주는 함수고, count() 는 그 문자들을 세는 함수이다.
    let slice = "Hello!";
    println!("Slice is {} bytes and also {} characters.", slice.len(), slice.chars().count());
    let slice2 = "안녕!";
    println!("Slice is {} bytes and also {} characters.", slice2.len(), slice2.chars().count());
}